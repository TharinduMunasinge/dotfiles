[user]
  name = Tharindu Munasinghe
  email = munasinghetharindu@gmail.com
[push]
  default = current
[color]
  ui = true
[alias]
  aa = add --all
  ap = add --patch
  ca = commit --amend
  ci = commit -v
  co = checkout
  create-branch = !sh -c 'git push origin HEAD:refs/heads/$1 && git fetch origin && git branch --track $1 origin/$1 && cd . && git checkout $1' -
  delete-branch = !sh -c 'git push origin :refs/heads/$1 && git remote prune origin && git branch -D $1' -
  merge-branch = !git checkout master && git merge @{-1}
  pr = !hub pull-request
  st = status
  up = !git fetch origin && git rebase origin/master
  find-merge = "!sh -c 'commit=$0 && branch=${1:-HEAD} && (git rev-list $commit..$branch --ancestry-path | cat -n; git rev-list $commit..$branch --first-parent | cat -n) | sort -k2 | uniq -f1 -d | sort -n | tail -1 | cut -f2'"
  show-merge = "!sh -c 'merge=$(git find-merge $0 $1) && [ -n \"$merge\" ] && git show $merge'"
  lg1 = log --graph --abbrev-commit --decorate --date=relative --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)' --all
  lg2 = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n''          %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' --all
  lg = !"git lg1"
  #git://192.168.43.105/
  serve = daemon --verbose --enable=upload-pack --enable=receive-pack --export-all --base-path=.git --reuseaddr --strict-paths .git/
  filelog = log -u
  st = !"git status"
 # based on: https://gist.github.com/intel352/9761288
  show-closest-branch = rev-parse --abbrev-ref HEAD
  # based on: http://stackoverflow.com/questions/3161204/find-the-parent-branch-of-a-git-branch
  show-closest-parent-branch = !"git show-branch -a --no-color 2> /dev/null | awk -F '[]^~[]' -v current_branch=`git show-closest-branch 2> /dev/null || true` 'BEGIN { rc=1 ; if ( length( current_branch ) == 0 ) { exit } } ( ( index( $1, \"*\" ) > 0 ) && ( length( $2 ) > 0 ) && ( $2 != current_branch ) ) { print $2 ; rc=0 ; exit } END { exit rc }'"
  # short versions
  cb = !git show-closest-branch
  pb = !git show-closest-parent-branch
  d = difftool
[core]
  excludesfile = ~/.gitignore
  autocrlf = input
[merge]
  ff = only
[include]
  path = .gitconfig.local
[commit]
  template = /Users/mike/.gitmessage
[user]
  name = Tharindu Munasinghe
  email = tharindu.munasinghe@trycake.com
[mergetool "Kaleidoscope"]
  cmd = ksdiff --merge --output \"$MERGED\" --base \"$BASE\" -- \"$LOCAL\" --snapshot \"$REMOTE\" --snapshot
  trustExitCode = true
[mergetool "sourcetree"]
  cmd = /usr/local/bin/ksdiff --merge --output \"$MERGED\" --base \"$BASE\" -- \"$LOCAL\" --snapshot \"$REMOTE\" --snapshot
  trustExitCode = true
[credential]

[hub]
  protocol = https
[filter "lfs"]
  clean = git-lfs clean %f
  smudge = git-lfs smudge %f
  required = true
[diff]
  tool = vimdiff
[difftool]
  prompt = false
